==============================================================================
------------------------------------------------------------------------------
                                                         *TextTransform.options*
                            `TextTransform.options`
Your plugin configuration with its default values.

Default values:
>
  TextTransform.options = {
    -- Prints useful logs about what event are triggered, and reasons actions are executed.
    debug = false,
    -- Keymap to trigger the transform.
    keymap = {
      -- Normal mode keymap.
      ["n"] = "<Leader>~",
      -- Visual mode keymap.
      ["v"] = "<Leader>~",
    },
  }

<

------------------------------------------------------------------------------
                                                         *TextTransform.setup()*
                        `TextTransform.setup`({options})
Define your text-transform setup.

Parameters~
{options} `(table)` Module config table. See |TextTransform.options|.

Usage~
`require("text-transform").setup()` (add `{}` with your |TextTransform.options| table)


==============================================================================
------------------------------------------------------------------------------
                                                    *TextTransform.into_words()*
                       `TextTransform.into_words`({str})
Splits a string into words.

------------------------------------------------------------------------------
                                                    *TextTransform.camel_case()*
                      `TextTransform.camel_case`({string})
Transforms a string into camelCase.

------------------------------------------------------------------------------
                                                    *TextTransform.snake_case()*
                      `TextTransform.snake_case`({string})
Transforms a string into snake_case.

------------------------------------------------------------------------------
                                                   *TextTransform.pascal_case()*
                     `TextTransform.pascal_case`({string})
Transforms a string into PascalCase.

------------------------------------------------------------------------------
                                                    *TextTransform.kebab_case()*
                      `TextTransform.kebab_case`({string})
Transforms a string into kebab-case.

------------------------------------------------------------------------------
                                                      *TextTransform.dot_case()*
                       `TextTransform.dot_case`({string})
Transforms a string into dot.case.

------------------------------------------------------------------------------
                                                    *TextTransform.title_case()*
                      `TextTransform.title_case`({string})
Transforms a string into Title Case.

------------------------------------------------------------------------------
                                                    *TextTransform.const_case()*
                      `TextTransform.const_case`({string})
Transforms a string into CONSTANT_CASE.

------------------------------------------------------------------------------
                                                    *TextTransform.replace_at()*
`TextTransform.replace_at`({start_line}, {start_col}, {end_line}, {end_col}, {transform})
Replaces the text at the given position with the given transform.

------------------------------------------------------------------------------
                                                  *TextTransform.replace_word()*
                   `TextTransform.replace_word`({transform})
Replaces the current word with the given transform.

------------------------------------------------------------------------------
                                               *TextTransform.replace_columns()*
                  `TextTransform.replace_columns`({transform})
Replaces each column in visual block mode selection with the given transform.
Assumes that the each selection is 1 character and operates on the whole word under each cursor.

------------------------------------------------------------------------------
                                          *TextTransform.replace_cursor_range()*
`TextTransform.replace_cursor_range`({line}, {start_col}, {end_col}, {transform})
Replaces each cursor selection range with the given transform.


 vim:tw=78:ts=8:noet:ft=help:norl: